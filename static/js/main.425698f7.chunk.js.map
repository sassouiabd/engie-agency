{"version":3,"sources":["pages/sign-up/sign-up.styles.js","components/copyright/copyright.component.jsx","utils.js","redux/user/user.actions.js","pages/sign-up/sign-up.page.jsx","pages/sign-in/sign-in.styles.js","pages/sign-in/sign-in.page.jsx","redux/agencies/agencies.selectors.js","components/custom-drop-down/custom-drop-down.component.jsx","components/custom-table/custom-table.styles.js","redux/user/user.selectors.js","components/custom-table/custom-table.component.jsx","pages/agency-collection/agency-collection.styles.js","redux/agencies/agencies.actions.js","components/spinner/spinner.styles.js","components/spinner/spinner.component.jsx","pages/agency-collection/agency-collection.page.jsx","containers/app/app.container.jsx","reportWebVitals.ts","redux/user/user.reducer.js","redux/agencies/agencies.reducer.js","redux/root-reducer.js","redux/store.js","index.tsx"],"names":["S_signUp","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Copyright","website","packageJson","name","link","Typography","variant","color","align","Link","href","Date","getFullYear","getServerAdress","server","setChoice_act","createAction","setIsSignIn_act","setToken_act","setUserId_act","SignUp","S","useForm","register","handleSubmit","dispatch","useDispatch","history","useHistory","onSubmit","data","a","email","password","myHeaders","Headers","append","body","JSON","stringify","requestOptions","method","headers","redirect","serverAdress","fetch","response","json","res","error","token","userId","push","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","Grid","container","item","xs","TextField","required","fullWidth","id","label","autoComplete","type","Button","onClick","justify","Box","mt","signIn_S","SignIn","showSigningError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","length","autoFocus","selectAgencies","state","agencies","selectAgenciesData","createSelector","selectAgenciesLoaded","loaded","selectAgenciesIsLoading","isLoading","CustomDropDown","t","useTheme","useSelector","Autocomplete","onChange","e","newValue","options","Object","values","Nom","getOptionLabel","option","style","renderInput","params","StyledTableCell","withStyles","head","primary","common","white","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","S_customTable","table","minWidth","selectUser","user","selectChoice","choice","selectIsSignIn","isSignIn","selectToken","selectUserId","CustomTable","TableContainer","Paper","Table","aria-label","TableHead","keys","map","key","TableBody","entries","val","S_agencyCollection","setAgenciesData_act","setAgenciesLoaded_act","setAgenciesIsLoading_act","S_spinner","loaderContainer","left","top","webkitTransform","transform","textAlign","Spinner","text","CircularProgress","size","AgencyCollection","agencyLoaded","agenciesIsLoading","useEffect","fetchData","preventDefault","App","exact","path","to","SignInPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userReducer","handleActions","Map","ACT","payload","agenciesReducer","forEach","__v","agency","_id","persistConfig","storage","sessionStorage","whitelist","userPersistConfig","agenciesPersistConfig","rootReducer","combineReducers","persistReducer","middlewares","thunk","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAsBeA,EApBEC,aAAW,SAAAC,GAAK,MAAK,CACpCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,Q,eCAjBa,EAdG,SAAC,GAAD,QAChBC,eADgB,MACNC,EAAYC,KADN,MAEhBC,YAFgB,MAET,wBAFS,SAIhB,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAMN,EAA5B,SACGH,IACK,KACP,IAAIU,MAAOC,cACX,QCZQC,EAAkB,WAQ7B,OAHSX,EAAYY,Q,SCFVC,EAAgBC,YAAa,kBAC7BC,EAAkBD,YAAa,kBAC/BE,EAAeF,YAAa,iBAC5BG,EAAgBH,YAAa,kB,wBCgB3B,SAASI,IACtB,IAAMC,EAAIvC,IAEV,EAAmCwC,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAEZC,EAAWC,cACbC,EAAUC,cAERC,EAAQ,uCAAG,WAAMC,GAAN,mCAAAC,EAAA,6DACPC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SADA,UAGTC,EAAY,IAAIC,SACVC,OAAO,eAAgB,oBAE7BC,EAAOC,KAAKC,UAAU,CACxBP,QACAC,aAGEO,EAAiB,CACnBC,OAAQ,OACRC,QAASR,EACTG,KAAMA,EACNM,SAAU,UAGNC,EAAe/B,IAlBR,SAmBUgC,MAAM,GAAD,OACvBD,EADuB,gBAE1BJ,GArBW,cAmBPM,EAnBO,iBAuBKA,EAASC,OAvBd,QAuBPC,EAvBO,OAyBLC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,QACjBF,GAASC,GAASC,IACrB1B,EAASR,GAAgB,IACzBQ,EAASP,EAAagC,IACtBzB,EAASN,EAAcgC,IACvBxB,EAAQyB,KAAK,uBA9BF,kDAiCbC,QAAQC,IAAR,MAjCa,0DAAH,sDAqCd,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWtC,EAAEpC,MAAlB,UACE,cAAC2E,EAAA,EAAD,CAAQD,UAAWtC,EAAE9B,OAArB,SACE,cAAC,IAAD,MAEF,cAACc,EAAA,EAAD,CAAYmD,UAAU,KAAKlD,QAAQ,KAAnC,qBAGA,uBAAMqD,UAAWtC,EAAExB,KAAMgC,SAAUL,EAAaK,GAAhD,UACE,eAACgC,EAAA,EAAD,CAAMC,WAAS,EAAC3E,QAAS,EAAzB,UACE,cAAC0E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,aACE3D,QAAQ,WACR4D,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNlE,KAAK,QACLmE,aAAa,SACT/C,EAAS,aAGjB,cAACsC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,aACE3D,QAAQ,WACR4D,UAAQ,EACRC,WAAS,EACThE,KAAK,WACLkE,MAAM,WACNE,KAAK,WACLH,GAAG,WACHE,aAAa,oBACT/C,EAAS,mBAInB,cAACiD,EAAA,EAAD,CACEL,WAAS,EACT7D,QAAQ,YACRC,MAAM,UACNoD,UAAWtC,EAAEtB,OACb0E,QAAS5C,EACT0C,KAAK,SANP,qBAUA,cAACV,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAQ,WAAxB,SACE,cAACb,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACtD,EAAA,EAAD,CAAMC,KAAK,UAAUJ,QAAQ,QAA7B,wDAOR,cAACqE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,S,YCzGOC,EApBE9F,aAAW,SAACC,GAAD,MAAY,CACtCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QCWjB,SAAS2F,IACtB,IAAMzD,EAAIwD,IACJpD,EAAWC,cACbC,EAAUC,cAEd,EAAmCN,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAEZK,EAAQ,uCAAG,WAAMC,GAAN,qCAAAC,EAAA,yDACPE,EAAoBH,EAApBG,SAAUD,EAAUF,EAAVE,MAEZ+C,EAAmB,WACvBC,IAAM/B,MAAM,oCAAqC,CAC/CgC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAXC,WAeTxD,EAAMyD,OAAS,GAAKxD,EAASwD,OAAS,GAf7B,wBAgBPvD,EAAY,IAAIC,SACVC,OAAO,eAAgB,oBAE7BC,EAAOC,KAAKC,UAAU,CACxBP,QACAC,aAGEO,EAAiB,CACnBC,OAAQ,OACRC,QAASR,EACTG,KAAMA,EACNM,SAAU,UAGNC,EAAe/B,IA/BV,UAgCYgC,MAAM,GAAD,OACvBD,EADuB,gBAE1BJ,GAlCS,eAgCLM,EAhCK,iBAoCOA,EAASC,OApChB,QAoCLC,EApCK,OAqCHC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,QAEjBF,GAASC,GAASC,GACrB1B,EAASR,GAAgB,IACzBQ,EAASP,EAAagC,IACtBzB,EAASN,EAAcgC,IACvBxB,EAAQyB,KAAK,uBAEb2B,IA7CS,0DAiDbA,IACA1B,QAAQC,IAAR,MAlDa,0DAAH,sDAsDd,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWtC,EAAEpC,MAAlB,UACE,cAAC2E,EAAA,EAAD,CAAQD,UAAWtC,EAAE9B,OAArB,SACE,cAAC,IAAD,MAEF,cAACc,EAAA,EAAD,CAAYmD,UAAU,KAAKlD,QAAQ,KAAnC,qBAGA,uBAAMqD,UAAWtC,EAAExB,KAAMgC,SAAUL,EAAaK,GAAhD,UACE,cAACoC,EAAA,EAAD,aACE3D,QAAQ,WACRd,OAAO,SACP0E,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,gBACNlE,KAAK,QACLmE,aAAa,QACboB,WAAS,GACLnE,EAAS,WAGf,cAAC0C,EAAA,EAAD,aACE3D,QAAQ,WACRd,OAAO,SACP0E,UAAQ,EACRC,WAAS,EACThE,KAAK,WACLkE,MAAM,WACNE,KAAK,WACLH,GAAG,cACHE,aAAa,oBACT/C,EAAS,cAEf,cAACiD,EAAA,EAAD,CACEJ,GAAG,kBACHD,WAAS,EACT7D,QAAQ,YACRC,MAAM,UACNoD,UAAWtC,EAAEtB,OACbwE,KAAK,SANP,qBAUA,cAACV,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACtD,EAAA,EAAD,CACEH,QAAQ,QACRmE,QAAS,WACP9C,EAAQyB,KAAK,YAHjB,SAMG,6CAMX,cAACuB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,S,qBCrJKe,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,UAEhCC,EAAqBC,YAAe,CAACJ,IAAiB,SAAAE,GAAQ,OACzEA,EAAWA,EAAS/D,KAAO,MAGhBkE,EAAuBD,YAAe,CAACJ,IAAiB,SAAAE,GAAQ,QAC3EA,GAAWA,EAASI,UAGTC,EAA0BH,YACrC,CAACJ,IACD,SAAAE,GAAQ,QAAKA,GAAWA,EAASM,a,QCNpB,SAASC,IACtB,IAAMC,EAAIC,cAEJT,EAAWU,YAAYT,GACvBrE,EAAWC,cAEjB,OACE,cAAC8E,EAAA,EAAD,CACEC,SAAU,SAACC,EAAGC,GACRd,GACFpE,EAASV,EAAc4F,KAG3BvC,GAAG,kBACHwC,QAASf,EAAWgB,OAAOC,OAAOjB,GAAY,CAAC,CAAEkB,IAAK,WACtDC,eAAgB,SAAAC,GAAM,OAAIA,EAAOF,KACjCG,MAAO,CAAEpH,MAAO,IAAKN,OAAO,GAAD,OAAK6G,EAAElH,QAAQ,GAAf,WAC3BgI,YAAa,SAAAC,GAAM,OACjB,cAACnD,EAAA,EAAD,2BAAemD,GAAf,IAAuB/C,MAAM,SAAS/D,QAAQ,iB,qFCtBzC+G,GAAkBC,cAAW,SAAAtI,GAAK,MAAK,CAClDuI,KAAM,CACJ9H,gBAAiBT,EAAMU,QAAQ8H,QAAQ5H,KACvCW,MAAOvB,EAAMU,QAAQ+H,OAAOC,OAE9BrF,KAAM,CACJsF,SAAU,OANiBL,CAQ3BM,MAESC,GAAiBP,cAAW,SAAAtI,GAAK,MAAK,CACjD8I,KAAM,CACJ,qBAAsB,CACpBrI,gBAAiBT,EAAMU,QAAQqI,OAAOC,WAHdV,CAM1BW,KAESC,GAAgBnJ,YAAW,CACtCoJ,MAAO,CACLC,SAAU,OCtBDC,GAAa,SAAAzC,GAAK,OAAIA,EAAM0C,MAE5BC,GAAexC,YAAe,CAACsC,KAAa,SAAAC,GAAI,OAC3DA,EAAOA,EAAKE,OAAS,QAGVC,GAAiB1C,YAAe,CAACsC,KAAa,SAAAC,GAAI,QAC7DA,GAAOA,EAAKI,YAEDC,GAAc5C,YAAe,CAACsC,KAAa,SAAAC,GAAI,OAC1DA,EAAOA,EAAKpF,MAAQ,QAGT0F,GAAe7C,YAAe,CAACsC,KAAa,SAAAC,GAAI,OAC3DA,EAAOA,EAAKlE,GAAK,QCEJ,SAASyE,KACtB,IAAMxH,EAAI6G,KAEJM,EAASjC,YAAYgC,IAE3B,OAAOC,EACL,cAACM,EAAA,EAAD,CAAgBtF,UAAWuF,KAA3B,SACE,eAACC,EAAA,EAAD,CAAOrF,UAAWtC,EAAE8G,MAAOc,aAAW,mBAAtC,UACE,cAACC,EAAA,EAAD,UACE,cAACjB,EAAA,EAAD,UACGpB,OAAOsC,KAAKX,GAAQY,KAAI,SAAAC,GAAG,MAClB,QAARA,EAAgB,KACd,cAAChC,GAAD,UAA4BgC,GAANA,UAM9B,cAACC,EAAA,EAAD,UACE,cAACzB,GAAD,UACGhB,OAAO0C,QAAQf,GAAQY,KAAI,mCAAEC,EAAF,KAAOG,EAAP,WAClB,QAARH,EAAgB,KACd,cAAChC,GAAD,UAA4BmC,GAANA,eAOhC,KC7CC,IAAMC,GAAqB1K,aAAW,SAAAC,GAAK,MAAK,CACrD8I,KAAM,CACJtI,OAAQR,EAAMG,QAAQ,QCCbuK,GAAsB1I,YAAa,oBACnC2I,GAAwB3I,YAAa,sBACrC4I,GAA2B5I,YAAa,yB,UCOtC6I,GAZG9K,aAAW,SAAAC,GAAK,MAAK,CACrC8K,gBAAiB,CACf7E,SAAU,WACV8E,KAAM,MACNC,IAAK,MACLC,gBAAiB,wBACjBC,UAAW,wBACXpK,MAAO,QACPqK,UAAW,cCMAC,GATC,SAAC,GAAkB,EAAhBC,KAAiB,IAC5BhJ,EAAIwI,KACV,OACE,qBAAKlG,UAAWtC,EAAEyI,gBAAlB,SACE,cAACQ,GAAA,EAAD,CAAkBC,KAAM,QCYf,SAASC,KACtB,IAAMnJ,EAAIoI,KAEJhI,EAAWC,cAEX+I,EAAelE,YAAYP,GAC3B0E,EAAoBnE,YAAYL,GAChChD,EAAQqD,YAAYoC,IACpBxF,EAASoD,YAAYqC,IAyC3B,OAlCA+B,qBAAU,YA2Ba,IAAjBF,IAAgD,IAAtBC,GA1Bf,uCAAG,sCAAA3I,EAAA,6DAChBN,EAASmI,IAAyB,IADlB,UAGR1H,EAAY,IAAIC,SACZC,OAAO,gBAAjB,iBAA4Cc,IAC5ChB,EAAUE,OAAO,SAAUe,GAErBX,EAAiB,CACrBE,QAASR,EACTO,OAAQ,MACRE,SAAU,UAENC,EAAe/B,IAZP,SAaSgC,MAAM,GAAD,OACvBD,EADuB,sBAE1BJ,GAfY,cAaRM,EAbQ,iBAiBaA,EAASC,OAjBtB,iBAiBN8C,EAjBM,EAiBNA,SAERpE,EAASiI,GAAoB7D,IAC7BpE,EAASkI,IAAsB,IAC/BlI,EAASmI,IAAyB,IArBpB,kDAuBdvG,QAAQC,IAAR,MAvBc,0DAAH,oDA2BbsH,MAIcrE,YAAYL,GAG5B,cAAC,GAAD,IAEA,sBAAKvC,UAAWtC,EAAEyG,KAAlB,UACE,cAACtD,EAAA,EAAD,CACEJ,GAAG,YACH9D,QAAQ,YACRC,MAAM,YACNkE,QA/CS,SAAAiC,GACbA,EAAEmE,iBACFpJ,EAASR,GAAgB,KAyCvB,oBAQA,cAACmF,EAAD,IACA,cAACyC,GAAD,O,aCrDSiC,I,OAtBH,WACV,IAAMpC,EAAWnC,YAAYkC,IAE7B,OACE,cAAC,KAAD,UACE,eAAClF,EAAA,EAAD,CAAWE,SAAS,KAApB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,IAAlB,SACGtC,EAAW,cAAC8B,GAAD,IAAuB,cAAC,IAAD,CAAUS,GAAG,cAElD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUxH,UAAW0H,IACvC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUxH,UAAWpC,IACvC,cAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,qBAAlB,SACGtC,EAAW,cAAC8B,GAAD,IAAuB,cAAC,IAAD,CAAUS,GAAG,iBAGpD,cAAC,IAAD,WCZOE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kECuCCQ,GAlCKC,aAClB,IAAIC,IAAI,CACN,CACEC,EACA,SAACnG,EAAOmC,GAAR,mBAAC,eACInC,GADL,IAEE4C,OAAQT,EAAOiE,YAGnB,CACED,EACA,SAACnG,EAAOmC,GAAR,mBAAC,eACInC,GADL,IAEE8C,SAAUX,EAAOiE,YAGrB,CACED,EACA,SAACnG,EAAOmC,GAAR,mBAAC,eACInC,GADL,IAEE1C,MAAO6E,EAAOiE,YAGlB,CACED,EACA,SAACnG,EAAOmC,GAAR,mBAAC,eACInC,GADL,IAEExB,GAAI2D,EAAOiE,cAnCQ,CACzBxD,OAAQ,KACRE,UAAU,EACVxF,MAAO,KACPkB,GAAI,O,SCqCS6H,GAlCSJ,aACtB,IAAIC,IAAI,CACN,CACEC,GACA,SAACnG,EAAOmC,GACN,IAAMlC,EAAWkC,EAAOiE,QAClBlK,EAAO,GAIb,OAHA+D,EAASqG,SAAQ,YAAwB,EAArBC,IAAsB,IAAdC,EAAa,wBACvCtK,EAAKsK,EAAOC,KAAOD,KAEd,2BACFxG,GADL,IAEE9D,WAIN,CACEiK,GACA,SAACnG,EAAOmC,GAAR,mBAAC,eACInC,GADL,IAEEK,OAAQ8B,EAAOiE,YAGnB,CACED,GACA,SAACnG,EAAOmC,GAAR,mBAAC,eACInC,GADL,IAEEO,UAAW4B,EAAOiE,cAlCK,CAC7B/F,QAAQ,EACRE,WAAW,EACXrE,KAAM,KCFFwK,GAAgB,CACpBjD,IAAK,OACLkD,QAASC,KACTC,UAAW,CAAC,OAAQ,aAGhBC,GAAoB,CACxBrD,IAAK,OACLkD,QAASC,MAGLG,GAAwB,CAC5BtD,IAAK,WACLkD,QAASC,MAGLI,GAAcC,aAAgB,CAClCvE,KAAMwE,aAAeJ,GAAmBd,IACxC/F,SAAUiH,aAAeH,GAAuBV,MAGnCa,gBAAeR,GAAeM,ICrBvCG,GAAc,C,MAACC,GASRC,GAAQC,aAAYN,GAAaO,KAAe,WAAf,EAAmBJ,KACpDK,GAAYC,aAAaJ,ICNtCK,IAASC,OACP,eAAC,IAAD,CAAUN,MAAOA,GAAjB,UACE,cAAC,IAAMO,WAAP,UACE,cAAC,KAAD,CAAaJ,UAAWA,GAAxB,SACE,cAAC,GAAD,QAEgB,OAGtBK,SAASC,eAAe,SAM1BvC,M","file":"static/js/main.425698f7.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst S_signUp = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default S_signUp;\r\n","import Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nconst Copyright = ({\r\n  website = packageJson.name,\r\n  link = \"https://www.engie.fr/\",\r\n}) => (\r\n  <Typography variant='body2' color='textSecondary' align='center'>\r\n    {\"Copyright © \"}\r\n    <Link color='inherit' href={link}>\r\n      {website}\r\n    </Link>{\" \"}\r\n    {new Date().getFullYear()}\r\n    {\".\"}\r\n  </Typography>\r\n);\r\n\r\nexport default Copyright;\r\n","import packageJson from \"../package.json\";\r\n\r\nexport const getServerAdress = () => {\r\n  let oRes = \"\";\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    oRes = \"http://localhost:5000\";\r\n  } else {\r\n    oRes = packageJson.server;\r\n  }\r\n\r\n  return oRes;\r\n};\r\n","import { createAction } from \"redux-actions\";\r\n\r\n//--------------------------------------------------------------------\r\n//                           ACTIONS\r\n//--------------------------------------------------------------------\r\nexport const setChoice_act = createAction(\"user/setChoice\");\r\nexport const setIsSignIn_act = createAction(\"user/setSignIn\");\r\nexport const setToken_act = createAction(\"user/setToken\");\r\nexport const setUserId_act = createAction(\"user/setUserId\");\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport S_signUp from \"./sign-up.styles\";\r\nimport Copyright from \"../../components/copyright/copyright.component\";\r\nimport { getServerAdress } from \"../../utils\";\r\nimport {\r\n  setIsSignIn_act,\r\n  setToken_act,\r\n  setUserId_act,\r\n} from \"../../redux/user/user.actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function SignUp() {\r\n  const S = S_signUp();\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const onSubmit = async data => {\r\n    const { email, password } = data;\r\n    try {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      var body = JSON.stringify({\r\n        email,\r\n        password,\r\n      });\r\n\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: body,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      const serverAdress = getServerAdress();\r\n      const response = await fetch(\r\n        `${serverAdress}/auth/signup`,\r\n        requestOptions\r\n      );\r\n      const res = await response.json();\r\n\r\n      const { error, token, userId } = res;\r\n      if (!error && token && userId) {\r\n        dispatch(setIsSignIn_act(true));\r\n        dispatch(setToken_act(token));\r\n        dispatch(setUserId_act(userId));\r\n        history.push(\"/agency-collection\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={S.paper}>\r\n        <Avatar className={S.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign up\r\n        </Typography>\r\n        <form className={S.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='email'\r\n                label='Email Address'\r\n                name='email'\r\n                autoComplete='email'\r\n                {...register(\"email\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                {...register(\"password\")}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={S.submit}\r\n            onClick={onSubmit}\r\n            type='submit'\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify='flex-end'>\r\n            <Grid item>\r\n              <Link href='/signin' variant='body2'>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst signIn_S = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default signIn_S;\r\n","import Copyright from \"../../components/copyright/copyright.component\";\r\n\r\n// Material UI\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n//Redux\r\nimport {\r\n  setIsSignIn_act,\r\n  setToken_act,\r\n  setUserId_act,\r\n} from \"../../redux/user/user.actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Styles\r\nimport signIn_S from \"./sign-in.styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getServerAdress } from \"../../utils\";\r\n\r\nexport default function SignIn() {\r\n  const S = signIn_S();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async data => {\r\n    const { password, email } = data;\r\n\r\n    const showSigningError = () => {\r\n      toast.error(\"Login or password are incorrect !\", {\r\n        position: \"bottom-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    };\r\n    try {\r\n      if (email.length > 0 && password.length > 0) {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var body = JSON.stringify({\r\n          email,\r\n          password,\r\n        });\r\n\r\n        var requestOptions = {\r\n          method: \"POST\",\r\n          headers: myHeaders,\r\n          body: body,\r\n          redirect: \"follow\",\r\n        };\r\n\r\n        const serverAdress = getServerAdress();\r\n        const response = await fetch(\r\n          `${serverAdress}/auth/signin`,\r\n          requestOptions\r\n        );\r\n        const res = await response.json();\r\n        const { error, token, userId } = res;\r\n\r\n        if (!error && token && userId) {\r\n          dispatch(setIsSignIn_act(true));\r\n          dispatch(setToken_act(token));\r\n          dispatch(setUserId_act(userId));\r\n          history.push(\"/agency-collection\");\r\n        } else {\r\n          showSigningError();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      showSigningError();\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={S.paper}>\r\n        <Avatar className={S.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign in\r\n        </Typography>\r\n        <form className={S.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='cy_email'\r\n            label='Email Address'\r\n            name='email'\r\n            autoComplete='email'\r\n            autoFocus\r\n            {...register(\"email\")}\r\n          />\r\n\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Password'\r\n            type='password'\r\n            id='cy_password'\r\n            autoComplete='current-password'\r\n            {...register(\"password\")}\r\n          />\r\n          <Button\r\n            id='cy_submitSignin'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={S.submit}\r\n            type='submit'\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link\r\n                variant='body2'\r\n                onClick={() => {\r\n                  history.push(\"/signup\");\r\n                }}\r\n              >\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const selectAgencies = state => state.agencies;\r\n\r\nexport const selectAgenciesData = createSelector([selectAgencies], agencies =>\r\n  agencies ? agencies.data : []\r\n);\r\n\r\nexport const selectAgenciesLoaded = createSelector([selectAgencies], agencies =>\r\n  agencies ? agencies.loaded : false\r\n);\r\n\r\nexport const selectAgenciesIsLoading = createSelector(\r\n  [selectAgencies],\r\n  agencies => (agencies ? agencies.isLoading : false)\r\n);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { selectAgenciesData } from \"../../redux/agencies/agencies.selectors\";\r\nimport { useTheme } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setChoice_act } from \"../../redux/user/user.actions\";\r\n\r\nexport default function CustomDropDown() {\r\n  const t = useTheme();\r\n\r\n  const agencies = useSelector(selectAgenciesData);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Autocomplete\r\n      onChange={(e, newValue) => {\r\n        if (agencies) {\r\n          dispatch(setChoice_act(newValue));\r\n        }\r\n      }}\r\n      id='cy-agency-label'\r\n      options={agencies ? Object.values(agencies) : [{ Nom: \"Agency\" }]}\r\n      getOptionLabel={option => option.Nom}\r\n      style={{ width: 300, margin: `${t.spacing(1)}px 0px` }}\r\n      renderInput={params => (\r\n        <TextField {...params} label='Agence' variant='outlined' />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nexport const StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nexport const StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport const S_customTable = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const selectUser = state => state.user;\r\n\r\nexport const selectChoice = createSelector([selectUser], user =>\r\n  user ? user.choice : null\r\n);\r\n\r\nexport const selectIsSignIn = createSelector([selectUser], user =>\r\n  user ? user.isSignIn : false\r\n);\r\nexport const selectToken = createSelector([selectUser], user =>\r\n  user ? user.token : null\r\n);\r\n\r\nexport const selectUserId = createSelector([selectUser], user =>\r\n  user ? user.id : null\r\n);\r\n","import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport {\r\n  S_customTable,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./custom-table.styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectChoice } from \"../../redux/user/user.selectors\";\r\n\r\nexport default function CustomTable() {\r\n  const S = S_customTable();\r\n\r\n  const choice = useSelector(selectChoice);\r\n\r\n  return choice ? (\r\n    <TableContainer component={Paper}>\r\n      <Table className={S.table} aria-label='customized table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {Object.keys(choice).map(key =>\r\n              key === \"_id\" ? null : (\r\n                <StyledTableCell key={key}>{key}</StyledTableCell>\r\n              )\r\n            )}\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          <StyledTableRow>\r\n            {Object.entries(choice).map(([key, val]) =>\r\n              key === \"_id\" ? null : (\r\n                <StyledTableCell key={val}>{val}</StyledTableCell>\r\n              )\r\n            )}\r\n          </StyledTableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  ) : null;\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const S_agencyCollection = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n","import { createAction } from \"redux-actions\";\r\n\r\n//--------------------------------------------------------------------\r\n//                           ACTIONS\r\n//--------------------------------------------------------------------\r\nexport const setAgenciesData_act = createAction(\"agencies/setData\");\r\nexport const setAgenciesLoaded_act = createAction(\"agencies/setLoaded\");\r\nexport const setAgenciesIsLoading_act = createAction(\"agencies/setIsLoading\");\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst S_spinner = makeStyles(theme => ({\r\n  loaderContainer: {\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    webkitTransform: \"translate(-50%, -50%)\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default S_spinner;\r\n","import React from \"react\";\n\n//Material UI ---\nimport { CircularProgress } from \"@material-ui/core\";\n\nimport S_spinner from \"./spinner.styles\";\n\nconst Spinner = ({ text = \"\" }) => {\n  const S = S_spinner();\n  return (\n    <div className={S.loaderContainer}>\n      <CircularProgress size={60} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { useEffect } from \"react\";\r\nimport CustomDropDown from \"../../components/custom-drop-down/custom-drop-down.component\";\r\nimport CustomTable from \"../../components/custom-table/custom-table.component\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { S_agencyCollection } from \"./agency-collection.styles\";\r\n\r\nimport { setIsSignIn_act } from \"../../redux/user/user.actions\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  selectAgenciesIsLoading,\r\n  selectAgenciesLoaded,\r\n} from \"../../redux/agencies/agencies.selectors\";\r\nimport {\r\n  setAgenciesData_act,\r\n  setAgenciesIsLoading_act,\r\n  setAgenciesLoaded_act,\r\n} from \"../../redux/agencies/agencies.actions\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\nimport { getServerAdress } from \"../../utils\";\r\nimport { selectToken, selectUserId } from \"../../redux/user/user.selectors\";\r\n\r\nexport default function AgencyCollection() {\r\n  const S = S_agencyCollection();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const agencyLoaded = useSelector(selectAgenciesLoaded);\r\n  const agenciesIsLoading = useSelector(selectAgenciesIsLoading);\r\n  const token = useSelector(selectToken);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  const logout = e => {\r\n    e.preventDefault();\r\n    dispatch(setIsSignIn_act(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch(setAgenciesIsLoading_act(true));\r\n      try {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\r\n        myHeaders.append(\"userid\", userId);\r\n\r\n        const requestOptions = {\r\n          headers: myHeaders,\r\n          method: \"GET\",\r\n          redirect: \"follow\",\r\n        };\r\n        const serverAdress = getServerAdress();\r\n        const response = await fetch(\r\n          `${serverAdress}/agency/retriveAll`,\r\n          requestOptions\r\n        );\r\n        const { agencies } = await response.json();\r\n\r\n        dispatch(setAgenciesData_act(agencies));\r\n        dispatch(setAgenciesLoaded_act(true));\r\n        dispatch(setAgenciesIsLoading_act(false));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if (agencyLoaded === false && agenciesIsLoading === false) {\r\n      fetchData();\r\n    }\r\n  });\r\n\r\n  const isLoading = useSelector(selectAgenciesIsLoading);\r\n\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className={S.root}>\r\n      <Button\r\n        id='cy_logout'\r\n        variant='contained'\r\n        color='secondary'\r\n        onClick={logout}\r\n      >\r\n        Logout\r\n      </Button>\r\n      <CustomDropDown />\r\n      <CustomTable />\r\n    </div>\r\n  );\r\n}\r\n","import SignUp from \"../../pages/sign-up/sign-up.page\";\nimport SignInPage from \"../../pages/sign-in/sign-in.page\";\nimport AgencyCollection from \"../../pages/agency-collection/agency-collection.page\";\nimport { selectIsSignIn } from \"../../redux/user/user.selectors\";\nimport { useSelector } from \"react-redux\";\nimport { Route, HashRouter, Switch, Redirect } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => {\n  const isSignIn = useSelector(selectIsSignIn);\n\n  return (\n    <HashRouter>\n      <Container maxWidth='lg'>\n        <Switch>\n          <Route exact path='/'>\n            {isSignIn ? <AgencyCollection /> : <Redirect to='/signin' />}\n          </Route>\n          <Route exact path='/signin' component={SignInPage} />\n          <Route exact path='/signup' component={SignUp} />\n          <Route exact path='/agency-collection'>\n            {isSignIn ? <AgencyCollection /> : <Redirect to='/signin' />}\n          </Route>\n        </Switch>\n        <ToastContainer />\n      </Container>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { handleActions } from \"redux-actions\";\r\nimport * as ACT from \"./user.actions\";\r\n//--------------------------------------------------------------------\r\n//                           REDUCERS\r\n//--------------------------------------------------------------------\r\n//Initial state\r\nconst USER_DEFAULT_STATE = {\r\n  choice: null,\r\n  isSignIn: false,\r\n  token: null,\r\n  id: null,\r\n};\r\n\r\n//Reducer\r\nconst userReducer = handleActions(\r\n  new Map([\r\n    [\r\n      ACT.setChoice_act,\r\n      (state, action) => ({\r\n        ...state,\r\n        choice: action.payload,\r\n      }),\r\n    ],\r\n    [\r\n      ACT.setIsSignIn_act,\r\n      (state, action) => ({\r\n        ...state,\r\n        isSignIn: action.payload,\r\n      }),\r\n    ],\r\n    [\r\n      ACT.setToken_act,\r\n      (state, action) => ({\r\n        ...state,\r\n        token: action.payload,\r\n      }),\r\n    ],\r\n    [\r\n      ACT.setUserId_act,\r\n      (state, action) => ({\r\n        ...state,\r\n        id: action.payload,\r\n      }),\r\n    ],\r\n  ]),\r\n  USER_DEFAULT_STATE\r\n);\r\n\r\nexport default userReducer;\r\n","import { handleActions } from \"redux-actions\";\r\nimport * as ACT from \"./agencies.actions\";\r\n//--------------------------------------------------------------------\r\n//                           REDUCERS\r\n//--------------------------------------------------------------------\r\n//Initial state\r\nconst AGENCIES_DEFAULT_STATE = {\r\n  loaded: false,\r\n  isLoading: false,\r\n  data: {},\r\n};\r\n\r\n//Reducer\r\nconst agenciesReducer = handleActions(\r\n  new Map([\r\n    [\r\n      ACT.setAgenciesData_act,\r\n      (state, action) => {\r\n        const agencies = action.payload;\r\n        const data = {};\r\n        agencies.forEach(({ __v, ...agency }) => {\r\n          data[agency._id] = agency;\r\n        });\r\n        return {\r\n          ...state,\r\n          data,\r\n        };\r\n      },\r\n    ],\r\n    [\r\n      ACT.setAgenciesLoaded_act,\r\n      (state, action) => ({\r\n        ...state,\r\n        loaded: action.payload,\r\n      }),\r\n    ],\r\n    [\r\n      ACT.setAgenciesIsLoading_act,\r\n      (state, action) => ({\r\n        ...state,\r\n        isLoading: action.payload,\r\n      }),\r\n    ],\r\n  ]),\r\n  AGENCIES_DEFAULT_STATE\r\n);\r\n\r\nexport default agenciesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\n//import storage from \"redux-persist/lib/storage\"; //use local storage as default\r\nimport sessionStorage from \"redux-persist/lib/storage/session\";\r\nimport userReducer from \"./user/user.reducer\";\r\nimport agenciesReducer from \"./agencies/agencies.reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: sessionStorage,\r\n  whitelist: [\"user\", \"agencies\"],\r\n};\r\n\r\nconst userPersistConfig = {\r\n  key: \"user\",\r\n  storage: sessionStorage,\r\n};\r\n\r\nconst agenciesPersistConfig = {\r\n  key: \"agencies\",\r\n  storage: sessionStorage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: persistReducer(userPersistConfig, userReducer),\r\n  agencies: persistReducer(agenciesPersistConfig, agenciesReducer),\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const logger = createLogger({\r\n    collapsed: (getState, action) => true,\r\n  });\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport const persistor = persistStore(store);\r\n\r\nexport const retrieveState = () => {\r\n  return store ? store.getState() : null;\r\n};\r\n\r\nexport const dispatchToState = props => {\r\n  return store ? store.dispatch(props) : null;\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/app/app.container\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </React.StrictMode>{\" \"}\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}